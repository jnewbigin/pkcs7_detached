name: CI/CD Python Package
on: push

jobs:
  test:
    runs-on: ubuntu-18.04
    - id: test
      run: |
        echo "export -p"

  pick-versions:
    # If a PR is for a specific python version then just use that for the matrix
    # otherwise, use all the versions we are going to test on
    runs-on: ubuntu-18.04
    outputs:
      python-versions: ${{ steps.set-matrix.outputs.python-versions }}
    steps:
    - id: set-matrix
      # This can become a script which inspects the PR name
      run: |
        echo "::set-output name=python-versions::[3.6, 3.7]"
  ci:
    name: CI steps
    runs-on: ubuntu-18.04
    needs: pick-versions
    strategy:
      matrix:
        #python: [3.6, 3.7, 3.8, 3.9]
        python: ${{fromJson(needs.pick-versions.outputs.python-versions)}}
        script: [lint, test, mypy]
      fail-fast: False
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Install development requirements
      run: scripts/install-requirements.sh
    - name: Run script ${{ matrix.script }}
      run: scripts/${{ matrix.script }}.sh
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
  ci-complete:
    needs: ci
    runs-on: ubuntu-18.04
    steps:
    - name: CI Complete
      run: 'true'

  cd:
    needs: ci-complete
    name: CD to to PyPI and TestPyPI
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install development requirements
      run: >-
        python -m
        pip install
        -r requirements-dev.txt
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution ðŸ“¦ to PyPII
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

